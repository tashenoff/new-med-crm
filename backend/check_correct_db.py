import asyncio
import os
import sys
from motor.motor_asyncio import AsyncIOMotorClient
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
load_dotenv()

async def check_correct_db():
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    mongo_url = os.environ.get('MONGO_URL')
    db_name = os.environ.get('DB_NAME')
    
    print(f"üîó MONGO_URL: {mongo_url}")
    print(f"üóÑÔ∏è DB_NAME: {db_name}")
    
    client = AsyncIOMotorClient(mongo_url)
    db = client[db_name]
    
    try:
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
        collections = await db.list_collection_names()
        print(f"üìä –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ –±–∞–∑–µ '{db_name}': {collections}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é
        for collection_name in collections:
            collection = db[collection_name]
            count = await collection.count_documents({})
            print(f"üìã {collection_name}: {count} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
        
        # –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å
        if 'appointments' in collections:
            target_appointment = await db.appointments.find_one({
                "id": "bdf10c0f-8d67-40ec-a702-a023abc050bf"
            })
            
            if target_appointment:
                print("‚úÖ –ù–ê–ô–î–ï–ù–ê –ø—Ä–æ–±–ª–µ–º–Ω–∞—è –∑–∞–ø–∏—Å—å!")
                print(f"üìã –î–µ—Ç–∞–ª–∏ –∑–∞–ø–∏—Å–∏:")
                print(f"   ID: {target_appointment.get('id')}")
                print(f"   –î–∞—Ç–∞: {target_appointment.get('appointment_date')} {target_appointment.get('appointment_time')}")
                print(f"   –í—Ä–∞—á: {target_appointment.get('doctor_name', target_appointment.get('doctor_id'))}")
                print(f"   –ü–∞—Ü–∏–µ–Ω—Ç: {target_appointment.get('patient_name', target_appointment.get('patient_id'))}")
                print(f"   Room ID: {target_appointment.get('room_id', '–ù–ï–¢')}")
                print(f"   –°—Ç–∞—Ç—É—Å: {target_appointment.get('status')}")
                
                # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å
                result = await db.appointments.delete_one({"id": "bdf10c0f-8d67-40ec-a702-a023abc050bf"})
                if result.deleted_count > 0:
                    print("üóëÔ∏è –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!")
                else:
                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å")
            else:
                print("‚ùå –ü—Ä–æ–±–ª–µ–º–Ω–∞—è –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        # –ò—â–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞ Mike
        if 'patients' in collections:
            mike = await db.patients.find_one({
                "full_name": {"$regex": "Mike", "$options": "i"}
            })
            if mike:
                print(f"üë§ –ü–∞—Ü–∏–µ–Ω—Ç Mike –Ω–∞–π–¥–µ–Ω: {mike.get('id')}")
        
        # –ò—â–µ–º –≤—Ä–∞—á–∞ —Ç–µ—Å—Ç1
        if 'doctors' in collections:
            doctor = await db.doctors.find_one({
                "full_name": {"$regex": "—Ç–µ—Å—Ç1", "$options": "i"}
            })
            if doctor:
                print(f"üë®‚Äç‚öïÔ∏è –í—Ä–∞—á —Ç–µ—Å—Ç1 –Ω–∞–π–¥–µ–Ω: {doctor.get('id')}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        client.close()

if __name__ == "__main__":
    asyncio.run(check_correct_db())
