import asyncio
import os
import sys
from motor.motor_asyncio import AsyncIOMotorClient

async def debug_appointments():
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
    mongo_url = os.environ.get('MONGO_URL', 'mongodb://localhost:27017')
    db_name = os.environ.get('DB_NAME', 'medical_crm')
    
    client = AsyncIOMotorClient(mongo_url)
    db = client[db_name]
    
    try:
        print("üîç –û—Ç–ª–∞–¥–∫–∞ –∑–∞–ø–∏—Å–µ–π...")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏
        appointments = await db.appointments.find({}).to_list(None)
        print(f"üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ –±–∞–∑–µ: {len(appointments)}")
        
        if len(appointments) > 0:
            print("\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø–∏—Å—è—Ö:")
            for i, apt in enumerate(appointments):
                print(f"{i+1}. ID: {apt.get('id', 'N/A')}")
                print(f"   –ü–∞—Ü–∏–µ–Ω—Ç: {apt.get('patient_id', 'N/A')}")
                print(f"   –í—Ä–∞—á: {apt.get('doctor_id', 'N/A')}")
                print(f"   –ö–∞–±–∏–Ω–µ—Ç: {apt.get('room_id', '–ù–ï–¢')}")
                print(f"   –î–∞—Ç–∞: {apt.get('appointment_date', 'N/A')}")
                print(f"   –í—Ä–µ–º—è: {apt.get('appointment_time', 'N/A')}")
                print(f"   –°—Ç–∞—Ç—É—Å: {apt.get('status', 'N/A')}")
                print("   ---")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–±–∏–Ω–µ—Ç—ã
        rooms = await db.rooms.find({"is_active": True}).to_list(None)
        print(f"\nüè• –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–±–∏–Ω–µ—Ç–æ–≤: {len(rooms)}")
        
        for room in rooms:
            print(f"- {room['name']} (ID: {room['id']})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
        schedules = await db.room_schedules.find({"is_active": True}).to_list(None)
        print(f"\nüìÖ –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π: {len(schedules)}")
        
        for schedule in schedules:
            print(f"- –ö–∞–±–∏–Ω–µ—Ç: {schedule['room_id']}, –í—Ä–∞—á: {schedule['doctor_id']}, –î–µ–Ω—å: {schedule['day_of_week']}, –í—Ä–µ–º—è: {schedule['start_time']}-{schedule['end_time']}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        client.close()

if __name__ == "__main__":
    asyncio.run(debug_appointments())
