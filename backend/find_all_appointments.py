import asyncio
import os
import sys
from motor.motor_asyncio import AsyncIOMotorClient

async def find_all_appointments():
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
    mongo_url = os.environ.get('MONGO_URL', 'mongodb://localhost:27017')
    db_name = os.environ.get('DB_NAME', 'medical_crm')
    
    client = AsyncIOMotorClient(mongo_url)
    db = client[db_name]
    
    try:
        print("üîç –ü–æ–∏—Å–∫ –í–°–ï–• –∑–∞–ø–∏—Å–µ–π –≤–æ –í–°–ï–• –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö...")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
        collections = await db.list_collection_names()
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∫–æ–ª–ª–µ–∫—Ü–∏–π: {collections}")
        
        # –ò—â–µ–º –≤–æ –≤—Å–µ—Ö –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö
        for collection_name in collections:
            collection = db[collection_name]
            count = await collection.count_documents({})
            print(f"üìã {collection_name}: {count} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
            
            if count > 0 and count < 20:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –µ—Å–ª–∏ –Ω–µ–º–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
                docs = await collection.find({}).to_list(None)
                for i, doc in enumerate(docs[:5]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                    print(f"  {i+1}. {doc}")
        
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –∑–∞–ø–∏—Å–∏ –ø–æ ID –≤–æ –≤—Å–µ—Ö –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö
        target_id = "bdf10c0f-8d67-40ec-a702-a023abc050bf"
        print(f"\nüéØ –ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–∏ —Å ID {target_id} –≤–æ –≤—Å–µ—Ö –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö...")
        
        for collection_name in collections:
            collection = db[collection_name]
            doc = await collection.find_one({"id": target_id})
            if doc:
                print(f"‚úÖ –ù–ê–ô–î–ï–ù–û –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ '{collection_name}':")
                print(doc)
                
                # –£–¥–∞–ª—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å
                result = await collection.delete_one({"id": target_id})
                if result.deleted_count > 0:
                    print(f"üóëÔ∏è –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ '{collection_name}'!")
                break
        else:
            print("‚ùå –ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∏ –≤ –æ–¥–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏")
        
        # –¢–∞–∫–∂–µ –ø–æ–∏—â–µ–º –ø–æ –¥—Ä—É–≥–∏–º –ø–æ–ª—è–º
        print(f"\nüîç –ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–µ–π —Å doctor_id 'a313cf6e-6a9e-4965-931d-9ed72a9b008b'...")
        for collection_name in collections:
            collection = db[collection_name]
            docs = await collection.find({"doctor_id": "a313cf6e-6a9e-4965-931d-9ed72a9b008b"}).to_list(None)
            if docs:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(docs)} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ '{collection_name}' —Å —ç—Ç–∏–º doctor_id")
                for doc in docs:
                    print(f"  - ID: {doc.get('id')}, –î–∞—Ç–∞: {doc.get('appointment_date')}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        client.close()

if __name__ == "__main__":
    asyncio.run(find_all_appointments())
