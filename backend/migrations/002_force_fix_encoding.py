#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è 002: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
import sys
import os
from datetime import datetime
from motor.motor_asyncio import AsyncIOMotorClient

# –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
MONGO_URL = os.environ.get('MONGO_URL', 'mongodb://localhost:27017')
DB_NAME = os.environ.get('DB_NAME', 'medcenter')

async def force_fix_encoding():
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–¥–∏—Ä–æ–≤–∫—É –≤–æ –≤—Å–µ—Ö –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö"""
    print("üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏...")
    
    client = AsyncIOMotorClient(MONGO_URL)
    db = client[DB_NAME]
    
    try:
        total_fixed = 0
        
        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –≤—Ä–∞—á–µ–π
        print("   üë®‚Äç‚öïÔ∏è –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤—Ä–∞—á–µ–π...")
        doctors_fixes = [
            {"old": "√ê√ë√ê¬∞√ë 1", "new": "–í—Ä–∞—á 1"},
            {"old": "√ë√ë√ë", "new": "—Ç–µ—Å—Ç"}, 
            {"old": "√ê¬°√ë√ê¬æ√ê¬º√ê¬∞√ë√ê¬æ√ê¬ª√ê¬æ√ê¬≥", "new": "–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥"},
            {"old": "??????????", "new": "—Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥"},
            {"old": "√ë√ê¬µ√ë√ê¬∞√ê¬ø√ê¬µ√ê¬≤√ë", "new": "—Ç–µ—Ä–∞–ø–µ–≤—Ç"},
            {"old": "√ë√ê¬∏√ë√ë√ë√ê¬≥", "new": "—Ö–∏—Ä—É—Ä–≥"}
        ]
        
        for fix in doctors_fixes:
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–º–µ–Ω–∞ –≤—Ä–∞—á–µ–π
            result = await db.doctors.update_many(
                {"full_name": fix["old"]},
                {"$set": {"full_name": fix["new"], "updated_at": datetime.utcnow()}}
            )
            if result.modified_count > 0:
                print(f"      ‚úÖ –ò–º—è –≤—Ä–∞—á–∞: '{fix['old']}' ‚Üí '{fix['new']}' ({result.modified_count} –∑–∞–ø–∏—Å–µ–π)")
                total_fixed += result.modified_count
            
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –≤—Ä–∞—á–µ–π
            result = await db.doctors.update_many(
                {"specialty": fix["old"]},
                {"$set": {"specialty": fix["new"], "updated_at": datetime.utcnow()}}
            )
            if result.modified_count > 0:
                print(f"      ‚úÖ –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≤—Ä–∞—á–∞: '{fix['old']}' ‚Üí '{fix['new']}' ({result.modified_count} –∑–∞–ø–∏—Å–µ–π)")
                total_fixed += result.modified_count
        
        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
        print("   üë• –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤...")
        patients_fixes = [
            {"old": "√ê√ê¬ª√ê¬µ√ê¬∫√ë", "new": "–ê–ª–µ–∫—Å"},
            {"old": "√ê√ê¬∞√ê¬≥√ê¬∏√ê¬µ√ê¬≤ √ê√ê¬º√ê¬∏√ë√ë√ê¬∏√ê¬π", "new": "–ù–∞–≥–∏–µ–≤ –î–º–∏—Ç—Ä–∏–π"},
            {"old": "√ê√ê¬∏√ë√ê¬∞√ê¬ª√ê¬∫√ê¬æ√ê¬≤ √ê√ê¬∏√ê¬∫√ê¬∏√ë√ê¬∞", "new": "–í–∏—Ç–∞–ª–∫–æ–≤ –ù–∏–∫–∏—Ç–∞"},
            {"old": "√ë√ê¬µ√ë√ë √ê¬∏√ê¬Ω√ë√ë√ê¬∞ 2", "new": "—Ç–µ—Å—Ç –∏–Ω—Å—Ç–∞ 2"},
            {"old": "√ë√ê¬µ√ë√ë insta", "new": "—Ç–µ—Å—Ç insta"}
        ]
        
        for fix in patients_fixes:
            result = await db.patients.update_many(
                {"full_name": fix["old"]},
                {"$set": {"full_name": fix["new"], "updated_at": datetime.utcnow()}}
            )
            if result.modified_count > 0:
                print(f"      ‚úÖ –ü–∞—Ü–∏–µ–Ω—Ç: '{fix['old']}' ‚Üí '{fix['new']}' ({result.modified_count} –∑–∞–ø–∏—Å–µ–π)")
                total_fixed += result.modified_count
        
        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —É—Å–ª—É–≥ (service_prices)
        print("   üí∞ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ª—É–≥–∏...")
        services_fixes = [
            {"old": "√ê√ê¬µ√ë√ê¬≤√ê¬∏√ë√ê¬Ω√ë√ê¬π √ê¬æ√ë√ê¬º√ê¬æ√ë√ë", "new": "–ü–µ—Ä–≤–∏—á–Ω—ã–π –æ—Å–º–æ—Ç—Ä"},
            {"old": "√ê¬•√ê¬∏√ë√ë√ë√ê¬≥√ê¬∏√ë", "new": "–•–∏—Ä—É—Ä–≥–∏—è"},
            {"old": "√ê¬ª√ê¬µ√ë√ê¬µ√ê¬Ω√ê¬∏√ê¬µ √ê¬ø√ê¬µ√ë√ê¬µ√ê¬Ω√ê¬∏", "new": "–ª–µ—á–µ–Ω–∏–µ –ø–µ—á–µ–Ω–∏"},
            {"old": "√ë√ê¬µ√ë√ë", "new": "—Ç–µ—Å—Ç"},
            {"old": "√ê¬¢√ê¬µ√ë√ê¬∞√ê¬ø√ê¬µ√ê¬≤√ë", "new": "–¢–µ—Ä–∞–ø–µ–≤—Ç"}
        ]
        
        for fix in services_fixes:
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è —É—Å–ª—É–≥
            result = await db.service_prices.update_many(
                {"service_name": fix["old"]},
                {"$set": {"service_name": fix["new"], "updated_at": datetime.utcnow()}}
            )
            if result.modified_count > 0:
                print(f"      ‚úÖ –£—Å–ª—É–≥–∞: '{fix['old']}' ‚Üí '{fix['new']}' ({result.modified_count} –∑–∞–ø–∏—Å–µ–π)")
                total_fixed += result.modified_count
            
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É—Å–ª—É–≥
            result = await db.service_prices.update_many(
                {"category": fix["old"]},
                {"$set": {"category": fix["new"], "updated_at": datetime.utcnow()}}
            )
            if result.modified_count > 0:
                print(f"      ‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ª—É–≥–∏: '{fix['old']}' ‚Üí '{fix['new']}' ({result.modified_count} –∑–∞–ø–∏—Å–µ–π)")
                total_fixed += result.modified_count
        
        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π
        print("   üè• –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏...")
        specialties_fixes = [
            {"old": "√ë√ê¬µ√ë√ê¬∞√ê¬ø√ê¬µ√ê¬≤√ë", "new": "—Ç–µ—Ä–∞–ø–µ–≤—Ç"},
            {"old": "√ë√ê¬∏√ë√ë√ë√ê¬≥", "new": "—Ö–∏—Ä—É—Ä–≥"},
            {"old": "√ê¬¢√ê¬µ√ë√ê¬∞√ê¬ø√ê¬µ√ê¬≤√ë", "new": "–¢–µ—Ä–∞–ø–µ–≤—Ç"},
            {"old": "??????????", "new": "—Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥"}
        ]
        
        for fix in specialties_fixes:
            result = await db.specialties.update_many(
                {"name": fix["old"]},
                {"$set": {"name": fix["new"], "updated_at": datetime.utcnow()}}
            )
            if result.modified_count > 0:
                print(f"      ‚úÖ –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å: '{fix['old']}' ‚Üí '{fix['new']}' ({result.modified_count} –∑–∞–ø–∏—Å–µ–π)")
                total_fixed += result.modified_count
        
        print(f"‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {total_fixed}")
        return total_fixed
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–¥–∏—Ä–æ–≤–∫–∏: {str(e)}")
        return 0
    finally:
        client.close()

async def add_services_to_doctors():
    """–£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ —É –≤—Å–µ—Ö –≤—Ä–∞—á–µ–π –µ—Å—Ç—å –ø–æ–ª–µ services"""
    print("üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–µ services —É –≤—Ä–∞—á–µ–π...")
    
    client = AsyncIOMotorClient(MONGO_URL)
    db = client[DB_NAME]
    
    try:
        # –ù–∞—Ö–æ–¥–∏–º –≤—Ä–∞—á–µ–π –±–µ–∑ –ø–æ–ª—è services –∏–ª–∏ —Å null –∑–Ω–∞—á–µ–Ω–∏–µ–º
        doctors_to_update = await db.doctors.find({
            "$or": [
                {"services": {"$exists": False}},
                {"services": None}
            ]
        }).to_list(None)
        
        updated_count = 0
        for doctor in doctors_to_update:
            await db.doctors.update_one(
                {"id": doctor["id"]},
                {"$set": {"services": [], "updated_at": datetime.utcnow()}}
            )
            updated_count += 1
            print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ services –≤—Ä–∞—á—É: {doctor.get('full_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        
        print(f"‚úÖ –ü–æ–ª–µ services –¥–æ–±–∞–≤–ª–µ–Ω–æ {updated_count} –≤—Ä–∞—á–∞–º")
        return updated_count
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—è services: {str(e)}")
        return 0
    finally:
        client.close()

async def create_migration_log():
    """–°–æ–∑–¥–∞–µ—Ç –∑–∞–ø–∏—Å—å –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏"""
    client = AsyncIOMotorClient(MONGO_URL)
    db = client[DB_NAME]
    
    try:
        migration_record = {
            "migration_id": "002_force_fix_encoding",
            "description": "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ services",
            "executed_at": datetime.utcnow(),
            "status": "completed"
        }
        
        await db.migrations.insert_one(migration_record)
        print("üìù –ó–∞–ø–∏—Å—å –æ –º–∏–≥—Ä–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
        
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å –æ –º–∏–≥—Ä–∞—Ü–∏–∏: {str(e)}")
    finally:
        client.close()

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print("=" * 60)
    print("üöÄ –ú–ò–ì–†–ê–¶–ò–Ø 002: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏")
    print("=" * 60)
    
    try:
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É
        encoding_fixed = await force_fix_encoding()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ services
        services_added = await add_services_to_doctors()
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ –º–∏–≥—Ä–∞—Ü–∏–∏
        await create_migration_log()
        
        print("=" * 60)
        print("‚úÖ –ú–ò–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print(f"   üî§ –ó–∞–ø–∏—Å–µ–π —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π: {encoding_fixed}")
        print(f"   üìã –í—Ä–∞—á–µ–π —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º –ø–æ–ª–µ–º services: {services_added}")
        print("=" * 60)
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {str(e)}")
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(main())

