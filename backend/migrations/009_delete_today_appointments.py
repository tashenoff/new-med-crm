import asyncio
import os
import sys
from datetime import datetime
from motor.motor_asyncio import AsyncIOMotorClient
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
load_dotenv()

async def delete_today_appointments():
    """
    –ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å
    """
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    mongo_url = os.environ.get('MONGO_URL')
    db_name = os.environ.get('DB_NAME')
    
    print(f"üîó MONGO_URL: {mongo_url}")
    print(f"üóÑÔ∏è DB_NAME: {db_name}")
    
    client = AsyncIOMotorClient(mongo_url)
    db = client[db_name]
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD
        today = datetime.now().strftime('%Y-%m-%d')
        print(f"üìÖ –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å–∏ –∑–∞ –¥–∞—Ç—É: {today}")
        
        appointments_collection = db.appointments
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è
        count_today = await appointments_collection.count_documents({
            "appointment_date": today
        })
        
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {count_today}")
        
        if count_today > 0:
            # –°–Ω–∞—á–∞–ª–∞ –≤—ã–≤–æ–¥–∏–º –∑–∞–ø–∏—Å–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥–µ–º —É–¥–∞–ª—è—Ç—å
            appointments_to_delete = await appointments_collection.find({
                "appointment_date": today
            }).to_list(None)
            
            print("üìã –ó–∞–ø–∏—Å–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:")
            for apt in appointments_to_delete:
                print(f"  - ID: {apt.get('id')}")
                print(f"    –í—Ä–µ–º—è: {apt.get('appointment_time')} - {apt.get('end_time', 'N/A')}")
                print(f"    –ü–∞—Ü–∏–µ–Ω—Ç: {apt.get('patient_id')}")
                print(f"    –í—Ä–∞—á: {apt.get('doctor_id')}")
                print(f"    –ö–∞–±–∏–Ω–µ—Ç: {apt.get('room_id', 'N/A')}")
                print("    ---")
            
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
            confirm = input(f"\n‚ùó –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å {count_today} –∑–∞–ø–∏—Å–µ–π –∑–∞ {today}? (y/N): ")
            
            if confirm.lower() == 'y':
                # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
                result = await appointments_collection.delete_many({
                    "appointment_date": today
                })
                
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {result.deleted_count}")
            else:
                print("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        else:
            print("‚ÑπÔ∏è –ó–∞–ø–∏—Å–µ–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        count_after = await appointments_collection.count_documents({
            "appointment_date": today
        })
        
        print(f"üìä –ó–∞–ø–∏—Å–µ–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: {count_after}")
        
        # –í—ã–≤–æ–¥–∏–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        total_appointments = await appointments_collection.count_documents({})
        print(f"üìà –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ –±–∞–∑–µ: {total_appointments}")
        
        if count_after == 0:
            print("üéâ –í—Å–µ –∑–∞–ø–∏—Å–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!")
        else:
            print(f"‚ö†Ô∏è –û—Å—Ç–∞–ª–∏—Å—å –∑–∞–ø–∏—Å–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {count_after}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        raise
    finally:
        client.close()

if __name__ == "__main__":
    asyncio.run(delete_today_appointments())
