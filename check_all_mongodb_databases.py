#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import asyncio
import motor.motor_asyncio

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
DATABASE_URL = "mongodb://localhost:27017"

async def check_all_databases():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ MongoDB"""
    client = motor.motor_asyncio.AsyncIOMotorClient(DATABASE_URL)
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –≤ MongoDB")
    print("=" * 60)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö
        databases = await client.list_database_names()
        print(f"üìÇ –ù–∞–π–¥–µ–Ω–æ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö: {len(databases)}")
        
        for db_name in databases:
            db = client[db_name]
            collections = await db.list_collection_names()
            
            print(f"\nüóÑÔ∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {db_name}")
            print(f"   –ö–æ–ª–ª–µ–∫—Ü–∏–π: {len(collections)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
            for collection_name in collections:
                collection = db[collection_name]
                count = await collection.count_documents({})
                print(f"   üìã {collection_name}: {count} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
                
                # –î–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–π —Å –≤—Ä–∞—á–∞–º–∏, –ø–∞—Ü–∏–µ–Ω—Ç–∞–º–∏, –ø–ª–∞–Ω–∞–º–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏
                if any(keyword in collection_name.lower() for keyword in 
                       ['doctor', 'patient', 'appointment', 'plan', 'treatment', 'user']):
                    
                    if count > 0:
                        print(f"      üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º {collection_name}...")
                        
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
                        first_doc = await collection.find_one({})
                        if first_doc:
                            print(f"      –ü–æ–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞:")
                            for key, value in first_doc.items():
                                if key == "_id":
                                    continue
                                
                                if isinstance(value, list):
                                    print(f"        {key}: [—Å–ø–∏—Å–æ–∫ –∏–∑ {len(value)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤]")
                                elif isinstance(value, dict):
                                    print(f"        {key}: {{–æ–±—ä–µ–∫—Ç}}")
                                else:
                                    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –∑–Ω–∞—á–µ–Ω–∏—è
                                    str_value = str(value)
                                    if len(str_value) > 50:
                                        str_value = str_value[:50] + "..."
                                    print(f"        {key}: {str_value}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∏–º–µ–Ω–∞ –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π CRM
        standard_names = ["clinic", "medical_crm", "medical", "crm", "hospital", "medcenter"]
        
        print(f"\nüè• –ü–†–û–í–ï–†–ö–ê –°–¢–ê–ù–î–ê–†–¢–ù–´–• –ò–ú–ï–ù –î–õ–Ø –ú–ï–î–ò–¶–ò–ù–°–ö–û–ô CRM:")
        for db_name in standard_names:
            if db_name in databases:
                print(f"   ‚úÖ {db_name} - —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            else:
                print(f"   ‚ùå {db_name} - –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB: {e}")
        print("   –í–æ–∑–º–æ–∂–Ω–æ, MongoDB –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    finally:
        client.close()

if __name__ == "__main__":
    asyncio.run(check_all_databases())
