#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤—Ä–∞—á–µ–π —Å –≥–∏–±—Ä–∏–¥–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import urllib.request
import urllib.parse
import json

def get_auth_token(base_url, email, password):
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    auth_url = f"{base_url}/api/auth/login"
    auth_data = {"email": email, "password": password}
    
    try:
        data = json.dumps(auth_data).encode('utf-8')
        req = urllib.request.Request(auth_url, data=data)
        req.add_header('Content-Type', 'application/json')
        
        with urllib.request.urlopen(req, timeout=10) as response:
            if response.getcode() == 200:
                result = json.loads(response.read().decode('utf-8'))
                return result.get('access_token')
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
    return None

def check_doctors_data(base_url, token):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤—Å–µ—Ö –≤—Ä–∞—á–µ–π"""
    doctors_url = f"{base_url}/api/doctors"
    
    try:
        req = urllib.request.Request(doctors_url)
        req.add_header('Authorization', f'Bearer {token}')
        req.add_header('Content-Type', 'application/json')
        
        with urllib.request.urlopen(req, timeout=10) as response:
            if response.getcode() == 200:
                doctors = json.loads(response.read().decode('utf-8'))
                return doctors
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–∞—á–µ–π: {e}")
    return []

def main():
    print("üîç –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–• –í–†–ê–ß–ï–ô –í –ë–ê–ó–ï –î–ê–ù–ù–´–•")
    print("=" * 50)

    base_url = "http://localhost:8001"
    email = "admin@medcenter.com"
    password = "admin123"
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    token = get_auth_token(base_url, email, password)
    if not token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è")
        return
    
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –≤—Ä–∞—á–µ–π
    doctors = check_doctors_data(base_url, token)
    
    if not doctors:
        print("‚ùå –í—Ä–∞—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    print(f"\nüìã –ù–ê–ô–î–ï–ù–û –í–†–ê–ß–ï–ô: {len(doctors)}")
    print("=" * 50)
    
    for i, doctor in enumerate(doctors, 1):
        print(f"\n{i}. {doctor.get('full_name', '–ë–µ–∑ –∏–º–µ–Ω–∏')}")
        print(f"   ID: {doctor.get('id')}")
        print(f"   –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å: {doctor.get('specialty', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}")
        print(f"   –¢–∏–ø –æ–ø–ª–∞—Ç—ã: {doctor.get('payment_type', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
        print(f"   –ó–Ω–∞—á–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã: {doctor.get('payment_value', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
        print(f"   –í–∞–ª—é—Ç–∞: {doctor.get('currency', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–∏–±—Ä–∏–¥–Ω—ã–µ –ø–æ–ª—è
        if doctor.get('payment_type') == 'hybrid':
            print("   üîó –ì–ò–ë–†–ò–î–ù–ê–Ø –û–ü–õ–ê–¢–ê:")
            print(f"      üí∞ –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —á–∞—Å—Ç—å: {doctor.get('payment_value', 0)} {doctor.get('currency', 'KZT')}")
            print(f"      üìä –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —á–∞—Å—Ç—å: {doctor.get('hybrid_percentage_value', 0)}%")
            print(f"      üè¶ –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—É–º–º–∞ (legacy): {doctor.get('hybrid_fixed_amount', 0)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
            has_fixed = doctor.get('payment_value', 0) > 0
            has_percentage = doctor.get('hybrid_percentage_value', 0) > 0
            
            if has_fixed and has_percentage:
                print("      ‚úÖ –î–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
            else:
                print("      ‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã:")
                if not has_fixed:
                    print("         - –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —á–∞—Å—Ç—å")
                if not has_percentage:
                    print("         - –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —á–∞—Å—Ç—å")
        else:
            print(f"   üíº –û–±—ã—á–Ω–∞—è –æ–ø–ª–∞—Ç–∞: {doctor.get('payment_type', 'unknown')}")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        print(f"   –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {doctor.get('created_at', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}")
        print(f"   –ê–∫—Ç–∏–≤–µ–Ω: {doctor.get('is_active', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫ –¥–æ–ª–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ
        if doctor.get('payment_type') == 'hybrid':
            display = f"üîó {doctor.get('payment_value', 0):,.0f}‚Ç∏ + {doctor.get('hybrid_percentage_value', 0)}%"
            print(f"   üëÅÔ∏è –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {display}")
    
    print("\n" + "=" * 50)
    print("üéØ –†–ï–ó–Æ–ú–ï:")
    
    hybrid_doctors = [d for d in doctors if d.get('payment_type') == 'hybrid']
    print(f"   –í—Å–µ–≥–æ –≤—Ä–∞—á–µ–π: {len(doctors)}")
    print(f"   –í—Ä–∞—á–µ–π —Å –≥–∏–±—Ä–∏–¥–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π: {len(hybrid_doctors)}")
    
    if hybrid_doctors:
        correct_hybrid = [d for d in hybrid_doctors 
                         if d.get('payment_value', 0) > 0 and d.get('hybrid_percentage_value', 0) > 0]
        print(f"   –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –≥–∏–±—Ä–∏–¥–Ω—ã—Ö: {len(correct_hybrid)}")
        
        if len(correct_hybrid) < len(hybrid_doctors):
            print("   ‚ö†Ô∏è –ï—Å—Ç—å –≤—Ä–∞—á–∏ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!")
        else:
            print("   ‚úÖ –í—Å–µ –≥–∏–±—Ä–∏–¥–Ω—ã–µ –≤—Ä–∞—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    print("\nüí° –ï—Å–ª–∏ –≤—Ä–∞—á —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –Ω–æ –ø—Ä–æ—Ü–µ–Ω—Ç –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è,")
    print("   –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –ø–æ–ª–µ 'hybrid_percentage_value' –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")

if __name__ == '__main__':
    main()
