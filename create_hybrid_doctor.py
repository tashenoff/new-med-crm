#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script to create a test doctor with hybrid payment directly in MongoDB
"""

import asyncio
import sys
import os
from datetime import datetime
import uuid

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend –º–æ–¥—É–ª—è–º
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

# –¢–µ–ø–µ—Ä—å –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ backend
try:
    from motor.motor_asyncio import AsyncIOMotorClient
    from models.doctor import Doctor
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–ü–æ–ø—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB...")
    # Fallback –∫ –ø—Ä—è–º–æ–º—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é
    import subprocess
    try:
        result = subprocess.run([sys.executable, '-c', 'import pymongo'], capture_output=True)
        if result.returncode == 0:
            from pymongo import MongoClient
            use_sync = True
        else:
            print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥—Ä–∞–π–≤–µ—Ä–æ–≤ MongoDB")
            sys.exit(1)
    except:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ MongoDB")
        sys.exit(1)

async def main():
    print("üè• –°–û–ó–î–ê–ù–ò–ï –í–†–ê–ß–ê –° –ì–ò–ë–†–ò–î–ù–û–ô –û–ü–õ–ê–¢–û–ô")
    print("=" * 50)

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    try:
        client = AsyncIOMotorClient('mongodb://localhost:27017/')
        db = client['medical']
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return

    # –î–∞–Ω–Ω—ã–µ –≤—Ä–∞—á–∞ —Å –≥–∏–±—Ä–∏–¥–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π
    doctor_id = str(uuid.uuid4())
    doctor_data = {
        'id': doctor_id,
        'full_name': '–î–æ–∫—Ç–æ—Ä –ì–∏–±—Ä–∏–¥ –¢–µ—Å—Ç',
        'specialty': '–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥-—Ç–µ—Ä–∞–ø–µ–≤—Ç',
        'phone': '+7-701-555-9999',
        'calendar_color': '#9C27B0',
        'payment_type': 'hybrid',
        'payment_value': 50000.0,  # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —á–∞—Å—Ç—å
        'hybrid_percentage_value': 12.5,  # –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —á–∞—Å—Ç—å
        'currency': 'KZT',
        'services': [],
        'payment_mode': 'general',
        'is_active': True,
        'created_at': datetime.utcnow(),
        'updated_at': datetime.utcnow()
    }

    try:
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–∞—á–∞
        result = await db.doctors.insert_one(doctor_data)
        print(f"‚úÖ –í—Ä–∞—á —Å–æ–∑–¥–∞–Ω —Å ID: {doctor_id}")
        print(f"   üë®‚Äç‚öïÔ∏è –ò–º—è: {doctor_data['full_name']}")
        print(f"   üí∞ –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —á–∞—Å—Ç—å: {doctor_data['payment_value']} ‚Ç∏")
        print(f"   üìä –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —á–∞—Å—Ç—å: {doctor_data['hybrid_percentage_value']}%")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –≤—Ä–∞—á–∞
        created_doctor = await db.doctors.find_one({'id': doctor_id})
        if created_doctor:
            print("\nüîç –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–•:")
            print(f"   –¢–∏–ø –æ–ø–ª–∞—Ç—ã: {created_doctor.get('payment_type')}")
            print(f"   –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—É–º–º–∞: {created_doctor.get('payment_value')}")
            print(f"   –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —á–∞—Å—Ç—å: {created_doctor.get('hybrid_percentage_value')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø–æ–ª—è —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
            if (created_doctor.get('payment_type') == 'hybrid' and
                created_doctor.get('payment_value') == 50000.0 and
                created_doctor.get('hybrid_percentage_value') == 12.5):
                print("üéâ –í–°–ï –î–ê–ù–ù–´–ï –°–û–•–†–ê–ù–ï–ù–´ –ö–û–†–†–ï–ö–¢–ù–û!")
            else:
                print("‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")

        print(f"\nüì± –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ:")
        print(f"   - –û—Ç–∫—Ä–æ–π—Ç–µ —Ä–∞–∑–¥–µ–ª '–í—Ä–∞—á–∏'")
        print(f"   - –ù–∞–π–¥–∏—Ç–µ –≤—Ä–∞—á–∞ '{doctor_data['full_name']}'")
        print(f"   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ: üîó 50,000‚Ç∏ + 12.5%")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ—Ö –≤—Ä–∞—á–µ–π –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è
    print(f"\nüìã –°–ü–ò–°–û–ö –í–°–ï–• –í–†–ê–ß–ï–ô:")
    doctors_cursor = db.doctors.find({}, {'full_name': 1, 'payment_type': 1, 'payment_value': 1, 'hybrid_percentage_value': 1})
    doctors = await doctors_cursor.to_list(length=None)
    for doc in doctors:
        if doc.get('payment_type') == 'hybrid':
            print(f"  üîó {doc['full_name']} - {doc.get('payment_value', 0)}‚Ç∏ + {doc.get('hybrid_percentage_value', 0)}%")
        else:
            print(f"  üìã {doc['full_name']} - {doc.get('payment_type', 'unknown')}")

if __name__ == '__main__':
    asyncio.run(main())
