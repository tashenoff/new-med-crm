import React from 'react';
import TimeSlot from './TimeSlot';

/**
 * –ö–æ–ª–æ–Ω–∫–∞ –∫–∞–±–∏–Ω–µ—Ç–∞ —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Å–ª–æ—Ç–∞–º–∏
 */
const RoomColumn = ({
  room,
  timeSlots,
  appointments,
  patients,
  doctors,
  currentDate,
  canEdit,
  getAvailableDoctorForSlot,
  // Drag & Drop
  draggedAppointment,
  hoveredSlot,
  onDragStart,
  onDragEnd,
  onSlotHover,
  onSlotLeave,
  onSlotDrop,
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  onSlotClick,
  onEditAppointment,
  onNewAppointment
}) => {
  return (
    <div className="room-column flex-1 border-r border-gray-200 last:border-r-0">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞–±–∏–Ω–µ—Ç–∞ */}
      <div className="room-header bg-blue-50 px-3 py-2 border-b border-gray-200 h-12">
        <h3 className="font-semibold text-blue-900 text-sm">{room.name}</h3>
      </div>
      
      {/* –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã */}
      <div className="time-slots">
        {timeSlots.map((time) => {
          // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –≤—Ä–∞—á–∞ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
          const availableDoctor = getAvailableDoctorForSlot(room, currentDate, time);
          
          // –ò—â–µ–º –∑–∞–ø–∏—Å—å –¥–ª—è —ç—Ç–æ–≥–æ —Å–ª–æ—Ç–∞
          let appointment = null;
          
          // 1. –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –∑–∞–ø–∏—Å–∏ —Å room_id (–Ω–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏)
          appointment = appointments.find(apt => 
            apt.room_id === room.id &&
            apt.appointment_time === time && 
            apt.appointment_date === currentDate
          );

          // 2. –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –ø–æ –≤—Ä–∞—á—É (—Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ –±–µ–∑ room_id)
          if (!appointment && availableDoctor) {
            appointment = appointments.find(apt => 
              apt.doctor_id === availableDoctor.id &&
              apt.appointment_time === time && 
              apt.appointment_date === currentDate &&
              (!apt.room_id || apt.room_id === "")
            );
          }
          
          // –û—Ç–ª–∞–¥–∫–∞ –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏ 10:30
          if (time === "10:30") {
            console.log(`üîç DEBUG ${room.name} ${time}:`, {
              roomId: room.id,
              availableDoctor: availableDoctor?.name,
              appointmentFound: !!appointment,
              appointmentId: appointment?.id,
              allAppointments: appointments.map(a => ({
                id: a.id, 
                time: a.appointment_time, 
                doctor_id: a.doctor_id,
                room_id: a.room_id
              }))
            });
          }
          
          const isHovered = hoveredSlot?.roomId === room.id && hoveredSlot?.time === time;

          return (
            <TimeSlot
              key={`${room.id}-${time}`}
              roomId={room.id}
              time={time}
              appointment={appointment}
              availableDoctor={availableDoctor}
              patients={patients}
              doctors={doctors}
              currentDate={currentDate}
              canEdit={canEdit}
              isHovered={isHovered}
              isDraggedOver={draggedAppointment && isHovered}
              // Drag & Drop
              onDragStart={onDragStart}
              onDragEnd={onDragEnd}
              onSlotHover={onSlotHover}
              onSlotLeave={onSlotLeave}
              onSlotDrop={onSlotDrop}
              // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
              onSlotClick={onSlotClick}
              onEditAppointment={onEditAppointment}
            />
          );
        })}
      </div>
    </div>
  );
};

export default RoomColumn;