import React from 'react';
import AppointmentCard from './AppointmentCard';
import { getAppointmentHeight } from '../utils/timeUtils';

/**
 * –í—Ä–µ–º–µ–Ω–Ω–æ–π —Å–ª–æ—Ç –≤ –∫–∞–±–∏–Ω–µ—Ç–µ
 */
const TimeSlot = ({
  roomId,
  time,
  appointment,
  availableDoctor,
  patients,
  doctors,
  currentDate,
  canEdit,
  isHovered,
  isDraggedOver,
  // Drag & Drop
  onDragStart,
  onDragEnd,
  onSlotHover,
  onSlotLeave,
  onSlotDrop,
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  onSlotClick,
  onEditAppointment
}) => {
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –ø—É—Å—Ç–æ–º—É —Å–ª–æ—Ç—É
  const handleSlotClick = () => {
    if (!appointment && availableDoctor && onSlotClick) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–∞–∫ –≤ —Å—Ç–∞—Ä–æ–º –∫–∞–ª–µ–Ω–¥–∞—Ä–µ: (date, time, roomId)
      onSlotClick(currentDate, time, roomId);
    }
  };

  // Drag & Drop –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  const handleDragOver = (e) => {
    e.preventDefault();
    e.dataTransfer.dropEffect = "move";
    
    if (onSlotHover) {
      onSlotHover(roomId, time);
    }
  };

  const handleDragLeave = (e) => {
    e.preventDefault();
    
    if (onSlotLeave) {
      onSlotLeave();
    }
  };

  const handleDrop = (e) => {
    e.preventDefault();
    console.log('üì• SLOT DROP:', { roomId, time, hasDoctor: !!availableDoctor });
    
    if (onSlotDrop && availableDoctor) {
      onSlotDrop(roomId, time);
    } else if (!availableDoctor) {
      alert('–í —ç—Ç–æ –≤—Ä–µ–º—è –≤ –¥–∞–Ω–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –≤—Ä–∞—á–∞');
    }
  };

  return (
    <div
      className={`
        time-slot relative h-16 border-b border-gray-200 transition-all duration-200
        ${availableDoctor ? 'bg-white hover:bg-blue-50 cursor-pointer' : 'bg-gray-100'}
        ${isDraggedOver && availableDoctor ? 'bg-green-200 border-green-400 border-2 shadow-lg' : ''}
        ${isDraggedOver && !availableDoctor ? 'bg-red-200 border-red-400 border-2' : ''}
      `}
      onClick={handleSlotClick}
      onDragOver={handleDragOver}
      onDragLeave={handleDragLeave}
      onDrop={handleDrop}
    >
      {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –∑–∞–ø–∏—Å–∏ –µ—Å–ª–∏ –µ—Å—Ç—å */}
      {appointment && (
        <AppointmentCard
          appointment={appointment}
          patient={patients.find(p => p.id === appointment.patient_id)}
          doctor={doctors.find(d => d.id === appointment.doctor_id)}
          height={getAppointmentHeight(appointment)}
          canEdit={canEdit}
          onEdit={onEditAppointment}
          onDragStart={onDragStart}
          onDragEnd={onDragEnd}
        />
      )}
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–∞—á–µ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ */}
      {!appointment && availableDoctor && (
        <div className="p-2 text-xs">
          <div className="text-green-700 font-medium">
            {availableDoctor.name}
          </div>
          <div className="text-gray-500">
            –î–æ—Å—Ç—É–ø–µ–Ω
          </div>
        </div>
      )}
      
      {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –≤—Ä–∞—á–∞ */}
      {!appointment && !availableDoctor && (
        <div className="p-2 text-xs text-gray-400">
          –í—Ä–∞—á –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
        </div>
      )}
    </div>
  );
};

export default TimeSlot;