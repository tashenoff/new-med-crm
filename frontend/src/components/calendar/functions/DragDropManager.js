/**
 * –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ drag & drop –æ–ø–µ—Ä–∞—Ü–∏–π
 */
export class DragDropManager {
  constructor({ 
    appointments, 
    rooms, 
    patients, 
    doctors, 
    onMoveAppointment,
    checkTimeConflicts,
    canAppointmentFitInSchedule,
    getAvailableDoctorForSlot,
    onRefreshCalendar
  }) {
    this.appointments = appointments;
    this.rooms = rooms;
    this.patients = patients;
    this.doctors = doctors;
    this.onMoveAppointment = onMoveAppointment;
    this.checkTimeConflicts = checkTimeConflicts;
    this.canAppointmentFitInSchedule = canAppointmentFitInSchedule;
    this.getAvailableDoctorForSlot = getAvailableDoctorForSlot;
    this.onRefreshCalendar = onRefreshCalendar;
    this.draggedAppointmentId = null;
    this.dropSuccessful = false;
    this.refreshTimeout = null; // –î–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—á–∞–ª–∞ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
   */
  handleDragStart = (e, appointmentId) => {
    e.dataTransfer.setData('appointmentId', appointmentId);
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
    this.draggedAppointmentId = appointmentId;
    this.dropSuccessful = false;
  };

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
   */
  handleDragEnd = (e) => {
    // –ï—Å–ª–∏ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –Ω–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω—ã–º –∏ –±—ã–ª –Ω–∞—á–∞—Ç drag
    if (this.draggedAppointmentId && !this.dropSuccessful) {
      console.log('üîÑ Drag&Drop –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω—ã–º, –æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å');
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É
      if (this.onRefreshCalendar) {
        this.onRefreshCalendar();
      }
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    this.draggedAppointmentId = null;
    this.dropSuccessful = false;
  };

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ drag over
   */
  handleDragOver = (e) => {
    e.preventDefault();
    e.stopPropagation();
    // –í—Å–µ–≥–¥–∞ —Ä–∞–∑—Ä–µ—à–∞–µ–º drop
    e.dataTransfer.dropEffect = "move";
  };

  /**
   * –í—ã—á–∏—Å–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–ª—è —Å–ª–æ—Ç–∞
   */
  calculateSlotEndTime = (room, date, time) => {
    if (!room || !room.schedule) return null;
    
    const dayOfWeek = new Date(date).getDay();
    const adjustedDayOfWeek = dayOfWeek === 0 ? 6 : dayOfWeek - 1;
    
    const activeSchedule = room.schedule.find(schedule => 
      schedule.day_of_week === adjustedDayOfWeek &&
      schedule.is_active &&
      time >= schedule.start_time &&
      time < schedule.end_time
    );
    
    return activeSchedule ? activeSchedule.end_time : null;
  };

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ drop
   */
  handleDrop = (e, roomId, date, time) => {
    e.preventDefault();
    const appointmentId = e.dataTransfer.getData('appointmentId');
    
    console.log(`üéØ DROP EVENT: appointmentId=${appointmentId}, roomId=${roomId}, date=${date}, time=${time}`);
    
    // –í–ê–ñ–ù–û: –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø–ª–∞–Ω–∏—Ä—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    // –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –∫–∞—Ä—Ç–æ—á–∫–∞ –≤–µ—Ä–Ω–µ—Ç—Å—è –Ω–∞ –º–µ—Å—Ç–æ –ø—Ä–∏ –ª—é–±—ã—Ö –æ—à–∏–±–∫–∞—Ö
    const refreshCalendarOnError = () => {
      if (this.onRefreshCalendar && !this.dropSuccessful) {
        console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–Ω–æ–≥–æ drop');
        this.onRefreshCalendar();
      }
    };
    
    // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    setTimeout(refreshCalendarOnError, 10);
    // –î—É–±–ª–∏—Ä—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
    setTimeout(refreshCalendarOnError, 100);
    
    if (!appointmentId || !this.onMoveAppointment) {
      console.log('‚ùå DROP FAILED: appointmentId –∏–ª–∏ onMoveAppointment –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
      return;
    }

    // –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–µ–º–µ—â–∞–µ–º—É—é –∑–∞–ø–∏—Å—å
    const movingAppointment = this.appointments.find(apt => 
      (apt._id || apt.id) === appointmentId
    );
    
    if (!movingAppointment) {
      alert('–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å
      if (this.onRefreshCalendar) {
        setTimeout(() => this.onRefreshCalendar(), 50);
      }
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–º–µ—â–∞–µ—Ç—Å—è –ª–∏ –∑–∞–ø–∏—Å—å –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    const room = this.rooms.find(r => r.id === roomId);
    const endTime = movingAppointment.end_time || null;
    
    if (room && endTime && !this.canAppointmentFitInSchedule(room, date, time, endTime)) {
      const appointmentDuration = `${movingAppointment.appointment_time} - ${endTime}`;
      const targetSlotEnd = this.calculateSlotEndTime(room, date, time);
      
      alert(
        `‚ùå –ó–ê–ü–†–ï–©–ï–ù–û: –ó–∞–ø–∏—Å—å –ù–ï –ü–û–ú–ï–©–ê–ï–¢–°–Ø –≤ –Ω–æ–≤–æ–µ –º–µ—Å—Ç–æ!\n\n` +
        `–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏: ${appointmentDuration}\n` +
        `–î–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è –≤ –Ω–æ–≤–æ–º —Å–ª–æ—Ç–µ: ${time} - ${targetSlotEnd || '–∫–æ–Ω–µ—Ü —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è'}\n\n` +
        `–ö–ê–†–¢–û–ß–ö–ê –û–°–¢–ê–ï–¢–°–Ø –ù–ê –ü–†–ï–ñ–ù–ï–ú –ú–ï–°–¢–ï.`
      );
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
      if (this.onRefreshCalendar) {
        // –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        setTimeout(() => this.onRefreshCalendar(), 1);
        // –î—É–±–ª–∏—Ä—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        setTimeout(() => this.onRefreshCalendar(), 50);
      }
      return; // –ñ–ï–°–¢–ö–û –±–ª–æ–∫–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤—Ä–µ–º–µ–Ω–∏
    const conflicts = this.checkTimeConflicts(roomId, date, time, endTime, appointmentId);
    if (conflicts.length > 0) {
      const conflictNames = conflicts.map(apt => {
        const patient = this.patients.find(p => p.id === apt.patient_id);
        return patient ? patient.full_name : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ü–∏–µ–Ω—Ç';
      }).join(', ');
      
      const confirm = window.confirm(
        `–í—Ä–µ–º—è –ø–µ—Ä–µ—Å–µ–∫–∞–µ—Ç—Å—è —Å –¥—Ä—É–≥–∏–º–∏ –∑–∞–ø–∏—Å—è–º–∏: ${conflictNames}.\n\n` +
        `–ü–µ—Ä–µ–º–µ—â–∞–µ–º–∞—è –∑–∞–ø–∏—Å—å: ${time}${endTime ? ` - ${endTime}` : ''}\n` +
        `–ö–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏: ${conflicts.map(apt => 
          `${apt.appointment_time}${apt.end_time ? ` - ${apt.end_time}` : ''}`
        ).join(', ')}\n\n` +
        `–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ?`
      );
      
      if (!confirm) {
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
        if (this.onRefreshCalendar) {
          setTimeout(() => this.onRefreshCalendar(), 50);
        }
        return;
      }
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–≥–æ –≤—Ä–∞—á–∞
    const originalDoctorId = movingAppointment.doctor_id;
    const availableDoctor = this.getAvailableDoctorForSlot(room, date, time);
    
    let targetDoctorId;
    
    // –ï—Å–ª–∏ –≤ –Ω–æ–≤–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ—Ç –∂–µ –≤—Ä–∞—á - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
    if (availableDoctor && availableDoctor.id === originalDoctorId) {
      targetDoctorId = originalDoctorId;
    } else if (availableDoctor) {
      // –°–ù–ê–ß–ê–õ–ê –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–º–µ—â–∞–µ—Ç—Å—è –ª–∏ –∑–∞–ø–∏—Å—å –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ù–û–í–û–ì–û –≤—Ä–∞—á–∞
      if (endTime && !this.canAppointmentFitInSchedule(room, date, time, endTime)) {
        const appointmentDuration = `${movingAppointment.appointment_time} - ${endTime}`;
        const newDoctorName = availableDoctor.full_name;
        const targetSlotEnd = this.calculateSlotEndTime(room, date, time);
        
        alert(
          `‚ùå –ù–ï–í–û–ó–ú–û–ñ–ù–û: –ó–∞–ø–∏—Å—å –ù–ï –ü–û–ú–ï–©–ê–ï–¢–°–Ø –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≤—Ä–∞—á–∞!\n\n` +
          `–í—Ä–∞—á: ${newDoctorName}\n` +
          `–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏: ${appointmentDuration}\n` +
          `–î–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è –≤—Ä–∞—á–∞: ${time} - ${targetSlotEnd || '–∫–æ–Ω–µ—Ü —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è'}\n\n` +
          `–ö–ê–†–¢–û–ß–ö–ê –û–°–¢–ê–ï–¢–°–Ø –ù–ê –ü–†–ï–ñ–ù–ï–ú –ú–ï–°–¢–ï.`
        );
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
        if (this.onRefreshCalendar) {
          setTimeout(() => this.onRefreshCalendar(), 50);
        }
        return; // –ñ–ï–°–¢–ö–û –±–ª–æ–∫–∏—Ä—É–µ–º —Å–º–µ–Ω—É –≤—Ä–∞—á–∞
      }
      
      // –ï—Å–ª–∏ –ø–æ–º–µ—â–∞–µ—Ç—Å—è - —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const confirmDoctorChange = window.confirm(
        `–í–Ω–∏–º–∞–Ω–∏–µ! –í –∫–∞–±–∏–Ω–µ—Ç–µ "${room.name}" –≤ —ç—Ç–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç–∞–µ—Ç –¥—Ä—É–≥–æ–π –≤—Ä–∞—á: ${availableDoctor.full_name}.\n\n` +
        `–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –≤—Ä–∞—á: ${this.doctors.find(d => d.id === originalDoctorId)?.full_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}\n` +
        `–ù–æ–≤—ã–π –≤—Ä–∞—á: ${availableDoctor.full_name}\n\n` +
        `–ü–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–ø–∏—Å—å –Ω–∞ –Ω–æ–≤–æ–≥–æ –≤—Ä–∞—á–∞?`
      );
      
      if (!confirmDoctorChange) {
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
        if (this.onRefreshCalendar) {
          setTimeout(() => this.onRefreshCalendar(), 50);
        }
        return;
      }
      
      targetDoctorId = availableDoctor.id;
    } else {
      console.log(`‚ùå –ù–ï–¢ –í–†–ê–ß–ê: roomId=${roomId}, date=${date}, time=${time}`);
      alert('–í —ç—Ç–æ –≤—Ä–µ–º—è –≤ –¥–∞–Ω–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –≤—Ä–∞—á–∞');
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
      if (this.onRefreshCalendar) {
        // –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        setTimeout(() => this.onRefreshCalendar(), 1);
        // –î—É–±–ª–∏—Ä—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        setTimeout(() => this.onRefreshCalendar(), 50);
      }
      return;
    }
    
    // –û—Ç–º–µ—á–∞–µ–º —á—Ç–æ drop —É—Å–ø–µ—à–µ–Ω (–≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞)
    this.dropSuccessful = true;
    
    // –í—ã–∑—ã–≤–∞–µ–º –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ
    this.onMoveAppointment(appointmentId, targetDoctorId, date, time, roomId);
    
    // –í–ê–ñ–ù–û: –í—Å–µ–≥–¥–∞ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å —á–µ—Ä–µ–∑ –∫–æ—Ä–æ—Ç–∫—É—é –∑–∞–¥–µ—Ä–∂–∫—É
    // –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    setTimeout(() => {
      if (this.onRefreshCalendar) {
        console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ drop');
        this.onRefreshCalendar();
      }
    }, 200);
  };
}
