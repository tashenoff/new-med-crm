import React, { useState, useEffect } from 'react';

const IncomeView = ({ user }) => {
  const [incomes, setIncomes] = useState([]);
  const [showModal, setShowModal] = useState(false);
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedPeriod, setSelectedPeriod] = useState('current_month');

  const [incomeForm, setIncomeForm] = useState({
    description: '',
    amount: '',
    category: 'treatment',
    date: new Date().toISOString().split('T')[0],
    patient_id: '',
    notes: ''
  });

  useEffect(() => {
    // TODO: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –¥–æ—Ö–æ–¥–∞—Ö —á–µ—Ä–µ–∑ API
    setIncomes([
      {
        id: 1,
        description: '–õ–µ—á–µ–Ω–∏–µ –∑—É–±–æ–≤ - –ò–≤–∞–Ω–æ–≤ –ò.–ò.',
        amount: 25000,
        category: 'treatment',
        date: '2025-09-10',
        patient_name: '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á',
        notes: '–ü–æ–ª–Ω–∞—è —Å–∞–Ω–∞—Ü–∏—è'
      },
      {
        id: 2,
        description: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è - –ü–µ—Ç—Ä–æ–≤ –ü.–ü.',
        amount: 8000,
        category: 'consultation',
        date: '2025-09-09',
        patient_name: '–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á',
        notes: '–ü–µ—Ä–≤–∏—á–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è'
      },
      {
        id: 3,
        description: '–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —á–∏—Å—Ç–∫–∞',
        amount: 12000,
        category: 'prevention',
        date: '2025-09-08',
        patient_name: '–°–∏–¥–æ—Ä–æ–≤–∞ –ê–Ω–Ω–∞ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞',
        notes: ''
      }
    ]);
  }, []);

  const handleSubmit = (e) => {
    e.preventDefault();
    // TODO: –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    const newIncome = {
      id: incomes.length + 1,
      ...incomeForm,
      amount: parseFloat(incomeForm.amount)
    };
    setIncomes([newIncome, ...incomes]);
    setIncomeForm({
      description: '',
      amount: '',
      category: 'treatment',
      date: new Date().toISOString().split('T')[0],
      patient_id: '',
      notes: ''
    });
    setShowModal(false);
  };

  const filteredIncomes = incomes.filter(income =>
    income.description.toLowerCase().includes(searchTerm.toLowerCase()) ||
    income.patient_name?.toLowerCase().includes(searchTerm.toLowerCase())
  );

  const totalIncome = filteredIncomes.reduce((sum, income) => sum + income.amount, 0);

  const getCategoryIcon = (category) => {
    switch(category) {
      case 'treatment': return 'ü¶∑';
      case 'consultation': return 'üë®‚Äç‚öïÔ∏è';
      case 'prevention': return 'üßΩ';
      case 'surgery': return 'üè•';
      case 'other': return 'üíº';
      default: return 'üí∞';
    }
  };

  const getCategoryName = (category) => {
    switch(category) {
      case 'treatment': return '–õ–µ—á–µ–Ω–∏–µ';
      case 'consultation': return '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è';
      case 'prevention': return '–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞';
      case 'surgery': return '–•–∏—Ä—É—Ä–≥–∏—è';
      case 'other': return '–ü—Ä–æ—á–µ–µ';
      default: return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex justify-between items-center">
        <h1 className="text-2xl font-bold text-gray-900">üí∞ –î–æ—Ö–æ–¥—ã</h1>
        <button
          onClick={() => setShowModal(true)}
          className="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors"
        >
          ‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥
        </button>
      </div>

      {/* Filters */}
      <div className="bg-white rounded-lg shadow p-6">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">–ü–æ–∏—Å–∫</label>
            <input
              type="text"
              placeholder="–ü–æ–∏—Å–∫ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é –∏–ª–∏ –ø–∞—Ü–∏–µ–Ω—Ç—É..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">–ü–µ—Ä–∏–æ–¥</label>
            <select
              value={selectedPeriod}
              onChange={(e) => setSelectedPeriod(e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
            >
              <option value="current_month">–¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü</option>
              <option value="last_month">–ü—Ä–æ—à–ª—ã–π –º–µ—Å—è—Ü</option>
              <option value="current_year">–¢–µ–∫—É—â–∏–π –≥–æ–¥</option>
              <option value="all_time">–í—Å–µ –≤—Ä–µ–º—è</option>
            </select>
          </div>
          <div className="flex items-end">
            <div className="bg-green-100 p-3 rounded-lg">
              <p className="text-sm text-green-700">–û–±—â–∏–π –¥–æ—Ö–æ–¥</p>
              <p className="text-2xl font-bold text-green-800">{totalIncome.toLocaleString('ru-RU')} ‚Ç∏</p>
            </div>
          </div>
        </div>
      </div>

      {/* Income List */}
      <div className="bg-white rounded-lg shadow overflow-hidden">
        <div className="overflow-x-auto">
          <table className="min-w-full divide-y divide-gray-200">
            <thead className="bg-gray-50">
              <tr>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –û–ø–∏—Å–∞–Ω–∏–µ
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –ö–∞—Ç–µ–≥–æ—Ä–∏—è
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –°—É–º–º–∞
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –î–∞—Ç–∞
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –ü–∞—Ü–∏–µ–Ω—Ç
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –î–µ–π—Å—Ç–≤–∏—è
                </th>
              </tr>
            </thead>
            <tbody className="bg-white divide-y divide-gray-200">
              {filteredIncomes.map((income) => (
                <tr key={income.id} className="hover:bg-gray-50">
                  <td className="px-6 py-4 whitespace-nowrap">
                    <div className="text-sm font-medium text-gray-900">{income.description}</div>
                    {income.notes && (
                      <div className="text-sm text-gray-500">{income.notes}</div>
                    )}
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap">
                    <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                      {getCategoryIcon(income.category)} {getCategoryName(income.category)}
                    </span>
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap">
                    <div className="text-sm font-bold text-green-600">
                      +{income.amount.toLocaleString('ru-RU')} ‚Ç∏
                    </div>
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    {new Date(income.date).toLocaleDateString('ru-RU')}
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    {income.patient_name || '-'}
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2">
                    <button className="text-blue-600 hover:text-blue-900">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                    <button className="text-red-600 hover:text-red-900">–£–¥–∞–ª–∏—Ç—å</button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>

      {/* Add Income Modal */}
      {showModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg p-6 w-full max-w-md mx-4">
            <h3 className="text-lg font-semibold mb-4">‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥</h3>
            
            <form onSubmit={handleSubmit} className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">–û–ø–∏—Å–∞–Ω–∏–µ *</label>
                <input
                  type="text"
                  value={incomeForm.description}
                  onChange={(e) => setIncomeForm({...incomeForm, description: e.target.value})}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
                  required
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
                <select
                  value={incomeForm.category}
                  onChange={(e) => setIncomeForm({...incomeForm, category: e.target.value})}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
                >
                  <option value="treatment">–õ–µ—á–µ–Ω–∏–µ</option>
                  <option value="consultation">–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</option>
                  <option value="prevention">–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞</option>
                  <option value="surgery">–•–∏—Ä—É—Ä–≥–∏—è</option>
                  <option value="other">–ü—Ä–æ—á–µ–µ</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">–°—É–º–º–∞ (‚Ç∏) *</label>
                <input
                  type="number"
                  min="0"
                  step="0.01"
                  value={incomeForm.amount}
                  onChange={(e) => setIncomeForm({...incomeForm, amount: e.target.value})}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
                  required
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">–î–∞—Ç–∞ *</label>
                <input
                  type="date"
                  value={incomeForm.date}
                  onChange={(e) => setIncomeForm({...incomeForm, date: e.target.value})}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
                  required
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">–ü—Ä–∏–º–µ—á–∞–Ω–∏—è</label>
                <textarea
                  value={incomeForm.notes}
                  onChange={(e) => setIncomeForm({...incomeForm, notes: e.target.value})}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
                  rows="3"
                />
              </div>

              <div className="flex space-x-3">
                <button
                  type="submit"
                  className="flex-1 bg-green-600 text-white py-2 rounded-lg hover:bg-green-700"
                >
                  –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                </button>
                <button
                  type="button"
                  onClick={() => setShowModal(false)}
                  className="flex-1 bg-gray-300 text-gray-700 py-2 rounded-lg hover:bg-gray-400"
                >
                  –û—Ç–º–µ–Ω–∞
                </button>
              </div>
            </form>
          </div>
        </div>
      )}
    </div>
  );
};

export default IncomeView;
