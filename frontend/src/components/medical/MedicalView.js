import React from 'react';

const MedicalView = ({ 
  patients, 
  selectedPatient, 
  medicalSummary,
  patientAppointments,
  user,
  onSelectPatient,
  onEditMedicalRecord,
  onAddMedicalEntry,
  onAddDiagnosis,
  onAddMedication
}) => {
  if (!selectedPatient) {
    return (
      <div>
        <h2 className="text-2xl font-bold mb-6">–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∫–∞—Ä—Ç—ã</h2>
        
        <div className="bg-white rounded-lg p-6 shadow">
          <h3 className="font-semibold mb-4">–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞</h3>
          <div className="grid gap-3">
            {patients.map(patient => (
              <button
                key={patient.id}
                onClick={() => onSelectPatient(patient)}
                className="text-left p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors"
              >
                <div className="font-medium">{patient.full_name}</div>
                <div className="text-sm text-gray-600">{patient.phone}</div>
              </button>
            ))}
          </div>
        </div>
      </div>
    );
  }

  if (!medicalSummary) {
    return (
      <div>
        <h2 className="text-2xl font-bold mb-6">–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∫–∞—Ä—Ç—ã</h2>
        <div className="text-center py-8">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto"></div>
          <p className="mt-2 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –∫–∞—Ä—Ç—ã...</p>
        </div>
      </div>
    );
  }

  return (
    <div>
      <h2 className="text-2xl font-bold mb-6">–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∫–∞—Ä—Ç—ã</h2>
      
      <div className="space-y-6">
        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ */}
        <div className="bg-white rounded-lg p-6 shadow">
          <div className="flex justify-between items-start">
            <div>
              <h3 className="text-xl font-semibold">{selectedPatient.full_name}</h3>
              <div className="mt-2 text-sm text-gray-600 space-y-1">
                <p>–¢–µ–ª–µ—Ñ–æ–Ω: {medicalSummary.patient.phone}</p>
                {medicalSummary.medical_record?.blood_type && (
                  <p>–ì—Ä—É–ø–ø–∞ –∫—Ä–æ–≤–∏: {medicalSummary.medical_record.blood_type}</p>
                )}
                {medicalSummary.medical_record?.height && (
                  <p>–†–æ—Å—Ç: {medicalSummary.medical_record.height} —Å–º</p>
                )}
                {medicalSummary.medical_record?.weight && (
                  <p>–í–µ—Å: {medicalSummary.medical_record.weight} –∫–≥</p>
                )}
              </div>
            </div>
            
            <div className="flex flex-wrap gap-2">
              {user?.role !== 'patient' && (
                <>
                  <button
                    onClick={() => onEditMedicalRecord(selectedPatient.id, medicalSummary.medical_record)}
                    className="bg-blue-600 text-white px-3 py-2 rounded-lg hover:bg-blue-700 transition-colors text-sm"
                    title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é –∫–∞—Ä—Ç—É"
                  >
                    ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–µ–¥–∫–∞—Ä—Ç—É
                  </button>
                  <button
                    onClick={() => onAddMedicalEntry(selectedPatient.id)}
                    className="bg-indigo-600 text-white px-3 py-2 rounded-lg hover:bg-indigo-700 transition-colors text-sm"
                    title="–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –æ –ø—Ä–∏–µ–º–µ"
                  >
                    üìù –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å
                  </button>
                  <button
                    onClick={() => onAddDiagnosis(selectedPatient.id)}
                    className="bg-purple-600 text-white px-3 py-2 rounded-lg hover:bg-purple-700 transition-colors text-sm"
                    title="–î–æ–±–∞–≤–∏—Ç—å –¥–∏–∞–≥–Ω–æ–∑"
                  >
                    ü©∫ –î–æ–±–∞–≤–∏—Ç—å –¥–∏–∞–≥–Ω–æ–∑
                  </button>
                  <button
                    onClick={() => onAddMedication(selectedPatient.id)}
                    className="bg-green-600 text-white px-3 py-2 rounded-lg hover:bg-green-700 transition-colors text-sm"
                    title="–ù–∞–∑–Ω–∞—á–∏—Ç—å –ª–µ–∫–∞—Ä—Å—Ç–≤–æ"
                  >
                    üíä –ù–∞–∑–Ω–∞—á–∏—Ç—å –ª–µ–∫–∞—Ä—Å—Ç–≤–æ
                  </button>
                </>
              )}
            </div>
          </div>
        </div>

        {/* –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–∏–µ–º–æ–≤ */}
        <div className="bg-white rounded-lg p-6 shadow">
          <h4 className="font-semibold mb-3">üìÖ –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–∏–µ–º–æ–≤</h4>
          {patientAppointments.length === 0 ? (
            <p className="text-gray-500">–ó–∞–ø–∏—Å–µ–π –Ω–∞ –ø—Ä–∏–µ–º –Ω–µ—Ç</p>
          ) : (
            <div className="space-y-3">
              {patientAppointments.map(appointment => (
                <div key={appointment.id} className="border-l-4 border-indigo-500 pl-4 bg-indigo-50 p-3 rounded">
                  <div className="flex justify-between items-start">
                    <div>
                      <div className="font-medium text-indigo-900">
                        {appointment.doctor_name} ({appointment.doctor_specialty})
                      </div>
                      <div className="text-sm text-indigo-700">
                        üìÖ {appointment.appointment_date} –≤ {appointment.appointment_time}
                      </div>
                      {appointment.reason && (
                        <div className="text-sm text-gray-600 mt-1">
                          –ü—Ä–∏—á–∏–Ω–∞: {appointment.reason}
                        </div>
                      )}
                      {appointment.notes && (
                        <div className="text-sm text-gray-600">
                          –ó–∞–º–µ—Ç–∫–∏: {appointment.notes}
                        </div>
                      )}
                    </div>
                    <span className={`px-2 py-1 text-xs rounded font-medium ${
                      appointment.status === 'completed' ? 'bg-green-100 text-green-800' :
                      appointment.status === 'confirmed' ? 'bg-blue-100 text-blue-800' :
                      appointment.status === 'in_progress' ? 'bg-orange-100 text-orange-800' :
                      appointment.status === 'cancelled' ? 'bg-red-100 text-red-800' :
                      'bg-gray-100 text-gray-800'
                    }`}>
                      {appointment.status === 'completed' ? '–ó–∞–≤–µ—Ä—à–µ–Ω' :
                       appointment.status === 'confirmed' ? '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω' :
                       appointment.status === 'in_progress' ? '–í –ø—Ä–æ—Ü–µ—Å—Å–µ' :
                       appointment.status === 'cancelled' ? '–û—Ç–º–µ–Ω–µ–Ω' :
                       '–ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω'}
                    </span>
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>

        {/* –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ */}
        {medicalSummary.entries.length > 0 && (
          <div className="bg-white rounded-lg p-6 shadow">
            <h4 className="font-semibold mb-3">üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏</h4>
            <div className="space-y-3">
              {medicalSummary.entries.map(entry => (
                <div key={entry.id} className="border-l-4 border-green-500 pl-4 bg-green-50 p-3 rounded">
                  <div className="font-medium text-green-900">{entry.title}</div>
                  <div className="text-sm text-green-700 mt-1">{entry.description}</div>
                  <div className="text-xs text-gray-500 mt-2">
                    {new Date(entry.created_at).toLocaleDateString('ru-RU')}
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* –û—Å—Ç–∞–ª—å–Ω—ã–µ —Å–µ–∫—Ü–∏–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ */}
      </div>
    </div>
  );
};

export default MedicalView;