#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Ä–∞—á–∞ —Å –≥–∏–±—Ä–∏–¥–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π —á–µ—Ä–µ–∑ API –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
"""

import urllib.request
import urllib.parse
import json

def get_auth_token(base_url, email, password):
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    auth_url = f"{base_url}/api/auth/login"
    auth_data = {"email": email, "password": password}
    
    try:
        data = json.dumps(auth_data).encode('utf-8')
        req = urllib.request.Request(auth_url, data=data)
        req.add_header('Content-Type', 'application/json')
        
        with urllib.request.urlopen(req, timeout=10) as response:
            if response.getcode() == 200:
                result = json.loads(response.read().decode('utf-8'))
                return result.get('access_token')
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
    return None

def create_hybrid_doctor_via_interface(base_url, token):
    """–°–æ–∑–¥–∞–µ—Ç –≤—Ä–∞—á–∞ —Å –≥–∏–±—Ä–∏–¥–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π —á–µ—Ä–µ–∑ API (–∏–º–∏—Ç–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞)"""
    doctors_url = f"{base_url}/api/doctors"
    
    # –î–∞–Ω–Ω—ã–µ –≤—Ä–∞—á–∞ —Å –≥–∏–±—Ä–∏–¥–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π (–∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å)
    from datetime import datetime
    unique_suffix = datetime.now().strftime("%H%M%S")
    
    doctor_data = {
        "full_name": f"–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¢–µ—Å—Ç –ì–∏–±—Ä–∏–¥ {unique_suffix}",
        "specialty": "–¢–µ—Ä–∞–ø–µ–≤—Ç", 
        "phone": f"+7-777-123-{unique_suffix}",
        "calendar_color": "#FF5722",
        "payment_type": "hybrid",
        "payment_value": 45000.0,  # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —á–∞—Å—Ç—å
        "hybrid_percentage_value": 20.0,  # –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —á–∞—Å—Ç—å
        "currency": "KZT",
        "services": [],
        "payment_mode": "general"
    }
    
    try:
        data = json.dumps(doctor_data).encode('utf-8')
        req = urllib.request.Request(doctors_url, data=data)
        req.add_header('Content-Type', 'application/json')
        req.add_header('Authorization', f'Bearer {token}')
        
        print(f"üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–∞—á–∞ —á–µ—Ä–µ–∑ API –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:")
        print(f"   üìä –î–∞–Ω–Ω—ã–µ: {json.dumps(doctor_data, ensure_ascii=False, indent=2)}")
        
        with urllib.request.urlopen(req, timeout=10) as response:
            status_code = response.getcode()
            response_data = response.read().decode('utf-8')
            
            if status_code in [200, 201]:
                result = json.loads(response_data)
                print(f"\n‚úÖ –í—Ä–∞—á —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
                print(f"   üÜî ID: {result.get('id')}")
                print(f"   üë®‚Äç‚öïÔ∏è –ò–º—è: {result.get('full_name')}")
                print(f"   üí∞ –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —á–∞—Å—Ç—å: {result.get('payment_value')} ‚Ç∏")
                print(f"   üìä –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —á–∞—Å—Ç—å: {result.get('hybrid_percentage_value')}%")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                if (result.get('payment_type') == 'hybrid' and 
                    result.get('payment_value') == 45000.0 and 
                    result.get('hybrid_percentage_value') == 20.0):
                    print(f"   ‚úÖ –í—Å–µ –≥–∏–±—Ä–∏–¥–Ω—ã–µ –ø–æ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
                    return result.get('id')
                else:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≥–∏–±—Ä–∏–¥–Ω—ã—Ö –ø–æ–ª–µ–π:")
                    print(f"      payment_type: {result.get('payment_type')}")
                    print(f"      payment_value: {result.get('payment_value')}")
                    print(f"      hybrid_percentage_value: {result.get('hybrid_percentage_value')}")
                    return None
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {response_data}")
                return None
                
    except urllib.error.HTTPError as e:
        print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {e.code}")
        try:
            error_detail = json.loads(e.read().decode('utf-8'))
            print(f"   –î–µ—Ç–∞–ª–∏: {json.dumps(error_detail, ensure_ascii=False, indent=2)}")
        except:
            pass
        return None
        
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return None

def check_doctor_data(base_url, token, doctor_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –≤—Ä–∞—á–∞"""
    doctor_url = f"{base_url}/api/doctors/{doctor_id}"
    
    try:
        req = urllib.request.Request(doctor_url)
        req.add_header('Authorization', f'Bearer {token}')
        req.add_header('Content-Type', 'application/json')
        
        with urllib.request.urlopen(req, timeout=10) as response:
            if response.getcode() == 200:
                doctor = json.loads(response.read().decode('utf-8'))
                
                print(f"\nüîç –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–• –í–†–ê–ß–ê –í –ë–î:")
                print(f"   ID: {doctor.get('id')}")
                print(f"   –ò–º—è: {doctor.get('full_name')}")
                print(f"   –¢–∏–ø –æ–ø–ª–∞—Ç—ã: {doctor.get('payment_type')}")
                print(f"   –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —á–∞—Å—Ç—å: {doctor.get('payment_value')}")
                print(f"   –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —á–∞—Å—Ç—å: {doctor.get('hybrid_percentage_value')}")
                
                # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
                if (doctor.get('payment_type') == 'hybrid' and 
                    doctor.get('payment_value') == 45000.0 and 
                    doctor.get('hybrid_percentage_value') == 20.0):
                    print(f"   üéâ –í–°–ï –î–ê–ù–ù–´–ï –ö–û–†–†–ï–ö–¢–ù–´ –í –ë–ê–ó–ï –î–ê–ù–ù–´–•!")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ
                    display = f"üîó {doctor.get('payment_value'):,.0f}‚Ç∏ + {doctor.get('hybrid_percentage_value')}%"
                    print(f"   üëÅÔ∏è –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ: {display}")
                    return True
                else:
                    print(f"   ‚ùå –î–∞–Ω–Ω—ã–µ –≤ –ë–î –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
                    return False
                    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–∞—á–∞: {e}")
        return False

def main():
    print("üß™ –¢–ï–°–¢ –°–û–ó–î–ê–ù–ò–Ø –í–†–ê–ß–ê –° –ì–ò–ë–†–ò–î–ù–û–ô –û–ü–õ–ê–¢–û–ô –ß–ï–†–ï–ó –ò–ù–¢–ï–†–§–ï–ô–°")
    print("=" * 60)

    base_url = "http://localhost:8001"
    email = "admin@medcenter.com"
    password = "admin123"
    
    # –®–∞–≥ 1: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    print("1Ô∏è‚É£ –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø")
    token = get_auth_token(base_url, email, password)
    if not token:
        print("‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω - –Ω–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è")
        return
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
    
    # –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–∞—á–∞
    print("\n2Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –í–†–ê–ß–ê")
    doctor_id = create_hybrid_doctor_via_interface(base_url, token)
    if not doctor_id:
        print("‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω - –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤—Ä–∞—á–∞")
        return
    
    # –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    print("\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–•")
    success = check_doctor_data(base_url, token, doctor_id)
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞
    print("\n" + "=" * 60)
    if success:
        print("üéØ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù –£–°–ü–ï–®–ù–û!")
        print("   ‚úÖ –í—Ä–∞—á —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
        print("   ‚úÖ –ì–∏–±—Ä–∏–¥–Ω—ã–µ –ø–æ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("   ‚úÖ –î–∞–Ω–Ω—ã–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        print("\nüí° –¢–µ–ø–µ—Ä—å –≥–∏–±—Ä–∏–¥–Ω–∞—è –æ–ø–ª–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ!")
    else:
        print("‚ùå –¢–ï–°–¢ –ü–†–û–í–ê–õ–ï–ù!")
        print("   –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≥–∏–±—Ä–∏–¥–Ω—ã—Ö –ø–æ–ª–µ–π")

if __name__ == '__main__':
    main()
