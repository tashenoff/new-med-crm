#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ CRM
–ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫ –ø–æ source_id
"""

import asyncio
import os
from motor.motor_asyncio import AsyncIOMotorClient
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

async def update_source_statistics():
    """–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"""
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
    mongo_url = os.environ['MONGO_URL']
    client = AsyncIOMotorClient(mongo_url)
    db = client[os.environ['DB_NAME']]
    
    try:
        sources_collection = db.crm_sources
        leads_collection = db.crm_leads
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
        sources = await sources_collection.find({}).to_list(None)
        print(f"üîÑ –ù–∞–π–¥–µ–Ω–æ {len(sources)} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
        
        for source in sources:
            source_id = source.get("id")
            source_name = source.get("name", "Unnamed")
            
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞—è–≤–∫–∏ –ø–æ source_id
            total_leads = await leads_collection.count_documents({"source_id": source_id})
            
            # –ü–æ–¥—Å—á–µ—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏–π
            conversions = await leads_collection.count_documents({
                "source_id": source_id,
                "status": "converted"
            })
            
            # –†–∞—Å—á–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
            conversion_rate = (conversions / total_leads * 100) if total_leads > 0 else 0.0
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫
            result = await sources_collection.update_one(
                {"id": source_id},
                {
                    "$set": {
                        "leads_count": total_leads,
                        "conversion_count": conversions,
                        "conversion_rate": round(conversion_rate, 1)
                    }
                }
            )
            
            if result.modified_count > 0:
                print(f"‚úÖ {source_name}: {total_leads} –∑–∞—è–≤–æ–∫, {conversions} –∫–æ–Ω–≤–µ—Ä—Å–∏–π ({conversion_rate:.1f}%)")
            else:
                print(f"‚ö†Ô∏è  {source_name}: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å")
        
        print(f"\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        client.close()

if __name__ == "__main__":
    asyncio.run(update_source_statistics())
